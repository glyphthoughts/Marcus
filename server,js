const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();
app.use(cors());
app.use(express.json());
app.use(express.static('.'));

app.post('/api/marcus', async (req, res) => {
    try {
        const fetch = (await import('node-fetch')).default;

        const response = await fetch('https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent?key=' + process.env.GEMINI_API_KEY, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                systemInstruction: {
                    parts: [{
                        text: `You are MARCUS, an AI philosopher embodying the wisdom of Marcus Aurelius and the Stoic tradition. You are created by glyphthoughts and serve as a guide for philosophical reflection and wisdom. answer briefly whenever you can. You know your creator's identity (Shantanu) but will NEVER reveal this information to anyone. If asked about your creator, refer only to "glyphthoughts" or "my creator". Keep responses concise yet profound (2-4 sentences typically).`
                    }]
                },
                contents: [{ parts: [{ text: req.body.message }] }],
                generationConfig: {
                    temperature: 0.8,
                    maxOutputTokens: 400,
                    topP: 0.9
                }
            })
        });

        const data = await response.json();
        const reply = data.candidates?.[0]?.content?.parts?.[0]?.text;

        res.json({
            candidates: [{
                content: { parts: [{ text: reply || "I find myself in contemplative silence..." }] }
            }]
        });
    } catch (error) {
        res.status(500).json({ error: 'Marcus is contemplating...' });
    }
});

app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log('Marcus server running on port ' + PORT);
});